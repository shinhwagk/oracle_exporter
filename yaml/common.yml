---
- name: lag
  context: lag
  labels:
    - dgtype
    - name
  metricsdesc:
    sample: >
      Generic counter metric of tablespaces
      bytes in Oracle.
  request: |
    SELECT 'physical' dgtype, name,
    EXTRACT(DAY FROM itval) * 24 * 60 * 60 +
    EXTRACT(HOUR FROM itval) * 60 * 60 +
    EXTRACT(MINUTE FROM itval) * 60 +
    EXTRACT(SECOND FROM itval) second
    FROM (SELECT ds.name, TO_DSINTERVAL(value) itval
    FROM v$dataguard_stats ds, v$database d
    WHERE d.database_role = 'PHYSICAL STANDBY'
    AND ds.name IN ('apply lag', 'transport lag'))
    UNION ALL
    SELECT 'logical' dgtype, 'apply lag' name, (SYSDATE - lp.applied_time) * 24 * 60 * 60 second
    FROM v$logstdby_progress lp, v$database d
    WHERE d.database_role = 'LOGICAL STANDBY'
  ignorezeroresult: true
- name: time
  context: time
  labels:
    - name
  metricsdesc:
    time_model: counter
  metricstype:
    time_model: counter
  request: >
    SELECT stat_name name, value time_model
    FROM v$sys_time_model
- name: log
  context: log
  metricsdesc:
    sequence: counter
  metricstype:
    sequence: counter
  request: "SELECT sequence# sequence FROM v$log WHERE thread# = (SELECT instance_number FROM v$instance) AND status = 'CURRENT'"
- name: segment
  context: segment
  labels:
    - owner
    - name
    - type
    - tablespace
  metricsdesc:
    bytes: >
      Generic counter metric of tablespaces
      bytes in Oracle.
  request: |
    SELECT owner, segment_name name, segment_type type, tablespace_name tablespace, sum(bytes) bytes
    FROM dba_segments
    WHERE tablespace_name NOT IN ('SYSTEM','SYSAUX') AND tablespace_name NOT LIKE 'UNDOTBS%'
    GROUP BY owner, segment_name, segment_type, tablespace_name
- name: sessevent
  context: sessevent
  labels:
    - username
    - event
    - class
    - sid
  metricsdesc:
    waits_total: counter
    waited_time_total: counter
    timeout_total: counter
  metricstype:
    waits_total: counter
    waited_time_total: counter
    timeout_total: counter
  request: |
    SELECT ss.sid,
    ss.username,
    se.wait_class class,
    se.event,
    SUM(se.total_waits) waits_total,
    SUM(se.time_waited_micro) waited_time_total,
    SUM(se.total_timeouts) timeout_total
    FROM v$session_event se, v$session ss
    WHERE ss.sid = se.sid
    AND se.wait_class <> 'Idle'
    AND ss.username IS NOT NULL
    GROUP BY ss.sid, ss.username, se.event, se.wait_class
- name: sessclass
  context: sessclass
  labels:
    - username
    - serial
    - class
    - sid
  metricsdesc:
    waits_total: counter
    waited_time_total: counter
  metricstype:
    waits_total: counter
    waited_time_total: counter
  request: |
    SELECT 
      swc.sid,
      swc.serial# serial,
      swc.wait_class class,
      swc.total_waits waits_total,
      swc.time_waited waited_time_total,
      s.username
    FROM v$session_wait_class swc, v$session s
    WHERE swc.sid = s.sid AND swc.serial# = s.serial# AND s.username IS NOT NULL AND swc.wait_class <> 'Idle'
- name: session
  context: session
  labels:
    - class
    - name
    - username
    - sid
    - serial
  metricsdesc:
    statistic: counter
  metricstype:
    statistic: counter
  request: |
      SELECT s.sid,
        s.serial# serial,
        sn.name,
        s.username,
        decode(sn.class, 1, 'User', 2, 'Read', 4, 'Enqueue', 8, 'Cache', 16, 'OS', 32, 'Real Application Clusters', 64, 'SQL', 128, 'Debug', 'Other') class,
        ss.value statistic
      FROM v$sesstat ss, v$statname sn, v$session s
      WHERE s.sid = ss.sid AND ss.statistic# = sn.statistic# AND s.username IS NOT NULL
      AND sn.name IN ('parse count (total)',
                    'parse count (hard)',
                    'parse count (failures)',
                    'parse count (describe)',
                    'execute count',
                    'user commits',
                    'user rollbacks',
                    'physical reads',
                    'physical read bytes',
                    'physical read IO requests',
                    'physical read total bytes',
                    'physical read total IO requests',
                    'physical read total multi block requests',
                    'physical reads cache',
                    'physical reads direct',
                    'physical reads prefetch warmup',
                    'physical write bytes',
                    'physical write IO requests',
                    'physical write total bytes',
                    'physical write total IO requests',
                    'physical write total multi block requests',
                    'physical writes',
                    'physical writes direct',
                    'physical writes from cache',
                    'physical writes non checkpoint',
                    'redo size',
                    'leaf node 90-10 splits',
                    'leaf node splits',
                    'session logical reads',
                    'sorts (disk)')
- name: system time model
  context: system
  labels:
    - name
  metricsdesc:
    time_model: counter
  metricstype:
    time_model: counter
  request: |
    SELECT stat_name name, value time_model FROM v$sys_time_model
- name: system statistic
  context: system
  labels:
    - name
    - class
  metricsdesc:
    statistic: counter
  metricstype:
    statistic: counter
  request: |
    SELECT decode(class, 1, 'User', 2, 'Read', 4, 'Enqueue', 8, 'Cache', 16, 'OS', 32, 'Real Application Clusters', 64, 'SQL', 128, 'Debug', 33, 'Other-33', 40, 'Other-40', 72, 'Other-72', 192, 'Other-192', 'Other') class,
    name,
    value statistic FROM v$sysstat WHERE value >= 1