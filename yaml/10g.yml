- name: sql
  context: sql
  labels: ["username", "sql_id", "command", "child"]
  metricsdesc:
    cpu_time_total: "Generic counter metric of tablespaces bytes in Oracle."
  metricstype:
    cpu_time_total: "counter"
  request: |
    SELECT sql_id,
    child_number child,
    (SELECT command_name FROM v$sqlcommand WHERE s.command_type = command_type) command,
    parsing_schema_name username,
    cpu_time cpu_time_total,
        elapsed_time elapsed_time_total,
        buffer_gets buffer_gets_total,
        disk_reads disk_read_total,
        sorts sort_total,
        executions executions_total,
        physical_read_bytes phy_read_bytes_total,
        physical_read_requests phy_read_request_total,
        physical_write_bytes phy_write_bytes_total,
        physical_write_requests phy_write_request_total,
        parse_calls parse_call_total,
        application_wait_time application_wait_total,
        concurrency_wait_time concurrency_wait_total,
        cluster_wait_time cluster_wait_total,
        user_io_wait_time user_io_wait_total,
        plsql_exec_time plsql_exec_total,
        java_exec_time java_exec_total,
        rows_processed rows_processed_total
    FROM v$sql s
    WHERE last_active_time >= TRUNC(sysdate, 'MI') - 1 / 24 / 60 AND is_obsolete ='N'
- name: system-event
  context: "sysevent"
  labels: ["event", "class"]
  metricsdesc:
    waits_total: "counter"
    waited_time_total: "counter"
    timeout_total: "counter"
  metricstype:
    waits_total: "counter"
    waited_time_total: "counter"
    timeout_total: "counter"
  request: |
    SELECT n.wait_class class,
          e.event,
          e.total_waits waits_total,
          e.time_waited_micro waited_time_total,
          e.total_timeouts timeout_total
    FROM v$system_event e, v$event_name n
    WHERE n.name = e.event
- name: ash
  context: ash
  labels:
    - sample_id
    - sid
    - serial
    - event
    - type
    - username
    - sql_id
    - opname
    - program
    - machine
    - blocking
  metricsdesc:
    sample: guard
  request: |
    SELECT 
      sample_id,
      session_id sid,
      session_serial# serial,
      DECODE(session_state, 'ON CPU', 'Wait for CPU', 'WAITING', event) event,
      session_type type,
      (SELECT username FROM dba_users WHERE user_id = ash.user_id) username,
      NVL(sql_id, 'null') sql_id,
      (SELECT name FROM audit_actions WHERE ash.sql_opcode = action) opname,
      NVL(program, 'null') program,
      NVL(machine, 'null') machine,
      TO_CHAR(NVL(blocking_session, 0)) blocking,
      1 sample
    FROM v$active_session_history ash
    WHERE sample_time >= TRUNC(sysdate, 'MI') - 1 / 24 / 60 AND sample_time < TRUNC(sysdate, 'MI')