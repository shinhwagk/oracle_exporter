name: test

on: push

jobs:
  test:
    name: Functional test
    runs-on: ubuntu-latest
    container: node:16
    services:
      oracle11g:
        image: gvenzl/oracle-xe:latest
        env:
          ORACLE_PASSWORD: ORACLE_PASSWORD
        ports:
          - 1521:1521
      mdb:
        image: shinhwagk/multidatabase
        env:
          ORACLE_USERPASS: system:ORACLE_PASSWORD
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18.0"
      - run: curl http://mdb:5000/check
      - run: |
          go run main.go mdb.go mp.go --mdb.addr=mdb:5000 --file.metrics=https://raw.githubusercontent.com/shinhwagk/oracle_exporter/mdb/yaml/test.yaml &
          for i in `seq 1 100`; do
            [ "$(curl -s -o /dev/null -w '%{http_code}' 127.0.0.1:9521/check)" -ge "200" ] && \
            curl -g -s 'http://127.0.0.1:9521/metrics?collect[]=system-timemodel&dsn=oracle11g:1521/XEPDB1' | grep 'oracle_up 1' && \
            exit 0
            echo "sleep $i"; sleep 1;
          done
          exit 1
          
  push:
    name: Push image to Docker Hub
    if: ${{ success() }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get and Set Version
        id: version
        run: |
          version=`cat VERSION`
          echo "::set-output name=version::${version}"
      - name: Create Github Tag
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push --tags
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            shinhwagk/oracle_exporter:${{ steps.version.outputs.version }}
            shinhwagk/oracle_exporter:latest
